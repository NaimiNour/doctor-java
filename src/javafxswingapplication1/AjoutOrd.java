/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javafxswingapplication1;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.event.ActionListener;

import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Image;
import com.itextpdf.text.pdf.draw.LineSeparator;
import com.itextpdf.text.pdf.languages.ArabicLigaturizer;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Image;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfPageEventHelper;
import com.itextpdf.text.pdf.languages.LanguageProcessor;

import java.io.FileOutputStream;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sql_classes.SqlConnectionMethods;

/**
 *
 * @author Bureau
 */
public class AjoutOrd extends javax.swing.JFrame {

    private ArrayList<String> selectedMedicaments;
    private ArrayList<String> selectedQts;
    private ArrayList<String> selectedPosos;

    /**
     * Creates new form AjoutOrd
     */
    private String user_name, type, name;
    private SqlConnectionMethods sqlClass = new SqlConnectionMethods();

    public AjoutOrd(String user_name, String type, String Nom, String Age) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                System.exit(0);
            }
        });
        this.user_name = user_name;
        this.type = type;

        selectedMedicaments = new ArrayList<>();
        selectedQts = new ArrayList<>();
        selectedPosos = new ArrayList<>();

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        String currentDate = dateFormat.format(new Date());
        jTextField1.setText(currentDate);
        patientNameField.setText(user_name);
        patientNameField.setText(Nom);
        patientAgeField1.setText(Age);

        ImageIcon icon = new ImageIcon("C:/Users/Bureau/Documents/NetBeansProjects/JavaFXSwingApplication1/src/javafxswingapplication1/appointment (2).png"); // Replace with the actual path to your icon image
        setIconImage(icon.getImage());
    }

    private AjoutOrd() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        patientNameField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        patientAgeField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();

        jLabel6.setText("jLabel6");

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setForeground(new java.awt.Color(153, 255, 255));

        jLabel1.setText("Nom :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ifralgon", "paracetamol", "maxilaz", "sterdex", "Spasfon", "Eau de mere", "n'existe pas" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Médicaments:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicament", "Qt", "Postologie"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(150);
        }

        jLabel4.setText("Qantitée:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "100g", "200g", "300g", "400g" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Posologie:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 fois", "2 fois", "3 fois", "4 fois" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        patientNameField.setEnabled(false);
        patientNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNameFieldActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 153, 102));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/printer (1).png"))); // NOI18N
        jButton1.setText("Imprimer");
        jButton1.setPreferredSize(new java.awt.Dimension(110, 33));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(255, 204, 204));
        jButtonDelete.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(0, 0, 0));
        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete (1).png"))); // NOI18N
        jButtonDelete.setText("Supprimer");
        jButtonDelete.setPreferredSize(new java.awt.Dimension(110, 33));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setText("Fiche d'ordonnance");

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(102, 255, 102));
        jButton3.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add (1).png"))); // NOI18N
        jButton3.setText("Ajouter");
        jButton3.setPreferredSize(new java.awt.Dimension(110, 33));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Age:");

        patientAgeField1.setEnabled(false);
        patientAgeField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientAgeField1ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/left-arrow (1).png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(patientNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(patientAgeField1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(0, 0, 0)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(149, 149, 149)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addGap(120, 120, 120)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14))
                    .addComponent(jButton5))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(patientNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(patientAgeField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

    }//GEN-LAST:event_jComboBox2ActionPerformed


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String patientName = patientNameField.getText();
        String AgeName = patientAgeField1.getText();
        // String medications = medicationArea.getText();
        // String medications = jTable1.getColumnModel().toString();

        generatePDF(patientName, AgeName);
        //       generateHTML(printableOrdonnance);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void patientNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNameFieldActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_patientNameFieldActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        delete();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String selectedMedicament = (String) jComboBox1.getSelectedItem();
        String selectedQt = (String) jComboBox2.getSelectedItem();
        String selectedPoso = (String) jComboBox3.getSelectedItem();

        if (selectedMedicament != null && !selectedMedicaments.contains(selectedMedicament) && (selectedQt != null) && (selectedPoso != null)) {
            Object[] rowData = {selectedMedicament, selectedQt, selectedPoso};
            //  DefaultTableModel model = new DefaultTableModel(rowData, columnNames);
            ajouter();
            //jTable1.setModel(model);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.addRow(rowData);
            selectedMedicaments.add(selectedMedicament);
            selectedQts.add(selectedQt);
            selectedPosos.add(selectedPoso);

            //   selectedMedicaments.add(jTextField2.getText());
            // selectedQts.add(selectedQt);
            // selectedPosos.add(selectedPoso);
        } else if (selectedMedicaments.contains(selectedMedicament)) {
            JOptionPane.showMessageDialog(this, "Médicament est déja utilisé");
        }


    }//GEN-LAST:event_jButton3ActionPerformed
    public void ajouter() {

        String query = "INSERT INTO prescriptions_contents(medication_name,dosage, frequency,id_prescription) SELECT '" + (String) jComboBox1.getSelectedItem() + "','" + (String) jComboBox2.getSelectedItem() + "','" + (String) jComboBox3.getSelectedItem() + "', prescriptions.id_prescription"
                + " FROM prescriptions "
                + " JOIN patients ON prescriptions.id_patient = patients.id_patient "
                + " WHERE CONCAT(name, ' ',family_name)  LIKE '%" + patientNameField.getText().trim() + "%' ";

        this.sqlClass.execDeleteOrUpdateOrInsert(query, "succss to insert prescriptions", "failed to login because: ");
        this.sqlClass.alertInfo("Médicament est ajouté correctement");

    }
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed

    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void patientAgeField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientAgeField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientAgeField1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.setVisible(false);
        testBut p2 = new testBut(this.user_name, this.type, this.name);
        p2.setVisible(true);


    }//GEN-LAST:event_jButton5ActionPerformed
    public static String reverseStringUsingLoop(String input) {
        StringBuilder reversed = new StringBuilder();
        for (int i = input.length() - 1; i >= 0; i--) {
            reversed.append(input.charAt(i));
        }
        return reversed.toString();
    }

    private void generatePDF(String patientName, String AgeName) {
        Document document = new Document();
        try {
            PdfWriter.getInstance(document, new FileOutputStream("ordonnance.pdf"));
            // Create a PdfWriter instance and set the page event
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("C:/Users/Bureau/Documents/NetBeansProjects/JavaFXSwingApplication1/ordonnance.pdf"));
            writer.setPageEvent(new MyFooterPageEvent());
            document.open();

            String watermarkImagePath = "C:/Users/Bureau/Doctor/doctor_java_programe/src/images/arriere_stethoscope.png"; // Specify the path of the watermark image
            Image watermarkImage = Image.getInstance(watermarkImagePath);
            watermarkImage.setAbsolutePosition(PageSize.A4.getWidth() / 2 - watermarkImage.getScaledWidth() / 2, PageSize.A4.getHeight() / 2 - watermarkImage.getScaledHeight() / 2);
            document.add(watermarkImage);

            // Customization of the PDF template
            Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 16, BaseColor.BLACK); // Blue titlle
            //  titleFont.setStyle(Font.UNDERLINE);
            Font titleFont1 = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 16, BaseColor.DARK_GRAY); // Blue titlle
            titleFont.setStyle(Font.UNDERLINE);
            Font subtitleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 14);
            Font normalFont = FontFactory.getFont(FontFactory.TIMES_ITALIC, 14);
            Font italiqueFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12, BaseColor.RED);

            // Title
            Paragraph title = new Paragraph("CABINET MÉDICAL DE MÉDICINE GÉNÉRALE \n", titleFont);
            title.setAlignment(Element.ALIGN_CENTER);
            document.add(title);

            // Creating the table to hold image and title in the same line
            PdfPTable headerTable = new PdfPTable(2);
            headerTable.setWidthPercentage(100);

            //Dr info 
            LanguageProcessor al = new ArabicLigaturizer();
            String arabicText = "الحكيم الاعوج";
            String arabicText1 = "طبيب مختص في جراحة العيون";

            // String newarabicText= reverseStringUsingLoop(arabicText);
            BaseFont arabicBaseFont = BaseFont.createFont("C:/Users/Bureau/Downloads/static/NotoNaskhArabic-Regular.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
            // Title  ,new Font(arabicBaseFont, 18, Font.BOLD, BaseColor.BLUE)
            Paragraph DrInfo = new Paragraph(al.process(arabicText)
                    + "\nDr : EL-AOUEDJ MOHAMED \nMÉDICIN GÉNÉRALISTE \n"
                    + al.process(arabicText1),
                    new Font(arabicBaseFont, 14, Font.NORMAL, BaseColor.BLACK));

            DrInfo.setAlignment(Element.ALIGN_LEFT);
            PdfPCell titleCell = new PdfPCell(DrInfo);
            titleCell.setBorder(PdfPCell.NO_BORDER);
            titleCell.setHorizontalAlignment(Element.ALIGN_LEFT);
            headerTable.addCell(titleCell);

            // Inserting the image
            Image image = Image.getInstance("C:/Users/Bureau/Doctor/doctor_java_programe/src/images/stethoscope (1).png"); // Replace with the actual image path
            image.scaleAbsolute(50, 50);
            PdfPCell imageCell = new PdfPCell(image);
            imageCell.setBorder(PdfPCell.NO_BORDER);
            imageCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            headerTable.addCell(imageCell);

            // Add the table to the document
            document.add(headerTable);
            // Create a PdfContentByte instance for overlaying the barcode
            PdfContentByte contentByte = writer.getDirectContent();
            String barcodeData = patientName;
            // Add a barcode to the prescription
            addBarcode(contentByte, barcodeData); // Replace with your barcode data
            //document.add(DrInfo);
            // Long underline
            Paragraph line = new Paragraph();
            line.add(new Chunk(new LineSeparator()));
            document.add(line);

            // Add current date
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            String currentDate = dateFormat.format(new Date());
            Paragraph dateParagraph = new Paragraph("El-Bayadh le: " + currentDate, subtitleFont);
            dateParagraph.setAlignment(Element.ALIGN_RIGHT);
            document.add(dateParagraph);

            // Creating the table to hold patientinfos  in the same line
            PdfPTable headerTable1 = new PdfPTable(2);
            headerTable1.setWidthPercentage(90);

            // Patient Information
            Paragraph patientInfo = new Paragraph("Nom: " + patientName, new Font(arabicBaseFont, 14, Font.ITALIC, BaseColor.BLUE));
            DrInfo.setAlignment(Element.ALIGN_LEFT);
            PdfPCell pat1Cell = new PdfPCell(patientInfo);
            pat1Cell.setBorder(PdfPCell.NO_BORDER);
            pat1Cell.setHorizontalAlignment(Element.ALIGN_LEFT);
            headerTable1.addCell(pat1Cell);

            Paragraph patientAge = new Paragraph("Age: " + AgeName, new Font(arabicBaseFont, 14, Font.ITALIC, BaseColor.BLUE));
            patientAge.setAlignment(Element.ALIGN_RIGHT);
            PdfPCell AgeCell1 = new PdfPCell(patientAge);
            AgeCell1.setBorder(PdfPCell.NO_BORDER);
            AgeCell1.setHorizontalAlignment(Element.ALIGN_CENTER);
            headerTable1.addCell(AgeCell1);

            // Add the table to the document
            document.add(headerTable1);
            // Patient Information
            // Paragraph patientInfo = new Paragraph("Nom: " + patientName , normalFont);
            // document.add(patientInfo);

            Font OrdFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18, BaseColor.DARK_GRAY);
            String OrdText = "ORDONNANCE";

            Phrase Ord = new Phrase(OrdText, OrdFont);
            float x1 = (document.right() - document.left()) / 2 + document.leftMargin();
            float y1 = document.bottomMargin() + 580;

            ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, Ord, x1, y1, 0);
            // Prescription Details
            //  Paragraph prescriptionHeader = new Paragraph("ORDONNANCE:", titleFont1);
            //  prescriptionHeader.setAlignment(Element.ALIGN_CENTER);

            //  document.add(prescriptionHeader);
            document.add(new Paragraph(""));
            int col = selectedMedicaments.size();
            PdfPTable table = new PdfPTable(3);
            // Add cells with content and extra spacing

            for (int i = 0; i < col; i++) {

                PdfPCell cell = new PdfPCell(new Paragraph(i + 1 + "/" + " " + selectedMedicaments.get(i), normalFont));
                PdfPCell cell1 = new PdfPCell(new Paragraph(selectedQts.get(i), normalFont));
                PdfPCell cell2 = new PdfPCell(new Paragraph(selectedPosos.get(i), normalFont));
                // PdfPCell cell3 = new PdfPCell(new Paragraph(""));

                cell.setPadding(15);
                cell1.setPadding(15);
                cell2.setPadding(15);
                //   cell3.setPadding(15);

                cell.setBorder(Rectangle.NO_BORDER);
                cell1.setBorder(Rectangle.NO_BORDER);
                cell2.setBorder(Rectangle.NO_BORDER);
                //   cell3.setBorder(Rectangle.NO_BORDER);

                table.addCell(cell);
                table.addCell(cell1);
                table.addCell(cell2);
                //   table.addCell(cell3);

            }

            //document.add(table);
            // Get the PdfContentByte from the writer
            // Set the position of the table using contentByte
            table.setTotalWidth(400); // Set the width of the table
            table.writeSelectedRows(0, -1, 100, 580, contentByte); // Adjust the coordinates as needed

            document.close();
            JOptionPane.showMessageDialog(this, "Ordonnance PDF generated successfully.");

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error generating PDF.");
        }
    }
    // Custom PageEvent to add a footer to each page

    private static void addBarcode(PdfContentByte contentByte, String barcodeData) throws DocumentException {
        // Create a Barcode128 object
        Barcode128 barcode = new Barcode128();
        barcode.setCode(barcodeData);

        // Set the size and position of the barcode
        barcode.setX(1.5f);
        barcode.setN(1.5f);
        barcode.setBaseline(10);
        barcode.setSize(12);

        // Create an Image from the barcode
        Image barcodeImage = barcode.createImageWithBarcode(contentByte, BaseColor.BLACK, BaseColor.BLACK);

        // Position the barcode image on the page
        barcodeImage.setAbsolutePosition(100, 100); // Adjust the position as needed

        // Add the barcode image to the contentByte
        contentByte.addImage(barcodeImage);
    }

    private class MyFooterPageEvent extends PdfPageEventHelper {

        public void onEndPage(PdfWriter writer, Document document) {
            // Define the font and footer text  

            Font footerFont = FontFactory.getFont(FontFactory.HELVETICA, 12, BaseColor.BLUE);
            Font beforeTextFont = FontFactory.getFont(FontFactory.HELVETICA, 12, BaseColor.BLACK);
            beforeTextFont.setStyle(Font.UNDERLINE);

            String footerText = "   04, Rue des Fréres belamri cité Ennacer, Elbayadh";
            String footerText1 = "  Mob: 06 57 59 03 45   Email: naimi@gmail.com";
            String beforeText = "  Signature du Médecin :";

            // Create a Phrase with the footer text
            Phrase footer = new Phrase(footerText, footerFont);
            Phrase footer1 = new Phrase(footerText1, footerFont);
            Phrase beforefooter = new Phrase(beforeText, beforeTextFont);

            Paragraph line = new Paragraph();
            line.add(new Chunk(new LineSeparator()));
            // Add the footer to the bottom center of the page
            float x = (document.right() - document.left()) / 2 + document.leftMargin();
            float y = document.bottomMargin() + 20;
            float w = document.bottomMargin() + 5;
            float Z = document.bottomMargin() + 39;
            float v = document.bottomMargin() + 200;

            ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, footer, x, y, 0);
            ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, line, x, Z, 0);
            ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, footer1, x, w, 0);
            ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_LEFT, beforefooter, x, v, 0);
        }
    }

    class Ordonnance {

        private String patientName;
        private String AgeName;
        // private String medications;
        // private String selectedMedicaments;

        public Ordonnance(String patientName, String AgeName) {
            this.patientName = patientName;
            this.AgeName = AgeName;

        }

        public String generatePrintableOrdonnance() {
            StringBuilder sb = new StringBuilder();
            sb.append("Patient: ").append(patientName).append("\n\n");
            sb.append("Prescription:\n");
            //  sb.append(medications);

            return sb.toString();
        }
    }

    private void delete() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.removeRow(selectedRow);

            selectedMedicaments.remove(selectedRow);

        } else {
            JOptionPane.showMessageDialog(this, "SVP selectionnez la ligne à supprimer.");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AjoutOrd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AjoutOrd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AjoutOrd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AjoutOrd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AjoutOrd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField patientAgeField1;
    private javax.swing.JTextField patientNameField;
    // End of variables declaration//GEN-END:variables
}
